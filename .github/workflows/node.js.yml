# This workflow will do a clean install of node dependencies, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Node.js CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
jobs:
  build:
    name: "Build & Test"
    env:
      PGUSER: postgres
      PGHOST: localhost
      PGPASSWORD: testpsqlpassword
      PGDATABASE: musics
      PGPORT: 5432
      REDIS_SERVER: localhost
      REDIS_PORT: 6379
      RABBITMQ_SERVER: amqp://localhost
      ACCESS_TOKEN_KEY: fa3dfb26baa6cf6cb78ba2782a328f8242a6104561fbacda3a8fc09acb0dcdb2
      REFRESH_TOKEN_KEY: 43ca7b289d3c3e4eaaa837eb6ab7a3a0b94b599a910ffd3f1c78a82dba40d1c9
      ACCESS_TOKEN_AGE: 1800
    services:
      postgres:
        image: postgres:13-alpine
        ports:
          - 5432:5432
        env:
          POSTGRES_PASSWORD: testpsqlpassword
          POSTGRES_DB: musics
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
      redis:
        image: redis:6-alpine
        ports:
          - 6379:6379
      rabbitmq:
        image: rabbitmq:3-alpine
        ports:
          - 5672:5672
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        node-version: [14.x, 16.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/
    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}
      - name: Package Install
        run: yarn
      - name: Lint
        run: yarn lerna run lint
      - name: Migrate DB
        run: yarn lerna run migrate --scope=@berviantoleo/music-api -- -- up
      - name: Test
        run: yarn lerna run test:coverage
      - name: Upload to Codecov
        if: ${{ matrix.node-version == '16.x' }}
        uses: codecov/codecov-action@v2
      - name: Build
        run: yarn lerna run build
      - name: Store Artifacts
        uses: actions/upload-artifact@v2
        if: ${{ matrix.node-version == '16.x' }}
        with:
          name: compiled-libs
          path: |
            packages/api/lib/**/*
            packages/consumer/lib/**/*
  docker-build:
    needs: "build"
    name: "Docker Build"
    runs-on: "ubuntu-20.04"
    steps:
      - uses: actions/checkout@v2
      - name: Download a single artifact
        uses: actions/download-artifact@v2
        with:
          name: compiled-libs
      - name: Check files
        run: ls -la
