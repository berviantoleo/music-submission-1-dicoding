# This workflow will do a clean install of node dependencies, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Node.js CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
env:
  PGUSER: postgres
  PGHOST: localhost
  PGPASSWORD: testpsqlpassword
  PGDATABASE: musics
  PGPORT: 5432
  HOST: "0.0.0.0"
  PORT: 5000
jobs:
  build:
    services:
      postgres:
        image: postgres:13-alpine
        ports:
          - 5432:5432
        env:
          POSTGRES_PASSWORD: testpsqlpassword
          POSTGRES_DB: musics
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        node-version: [12.x, 14.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/
    steps:
    - uses: actions/checkout@v2
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v2
      with:
        node-version: ${{ matrix.node-version }}
    - run: npm install
    - run: npm run lint
    - run: npm run migrate up
#    - name: Docker Build
#      run: docker build . -t musicapi
#    - name: Run use pm2
#      run: |
#        npm install pm2@latest -g
#        pm2 start src/ --name music_server
#        pm2 ls
#    - uses: matt-ball/newman-action@v0.2.4
#      with:
#        collection: postman/openapimusic.postman_collection.json
#        environment: postman/openapimusic.postman_environment.json
#    - name: Stop server
#      run: pm2 stop music_server
